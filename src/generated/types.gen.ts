// This file is auto-generated by @hey-api/openapi-ts

export type Health = unknown;

export type Auth = {
    email: string;
    password: string;
};

export type Users = {
    id: string;
    email: string;
    password: string;
    roleId: string;
    tenantId: string;
    name: string;
    phoneNumber: string;
    bio: string;
    resetToken: string;
    deletedAt: string;
    createdAt: string;
    updatedAt: string;
};

export type Files = {
    id: string;
    userId: string;
    name: string;
    path: string;
    text: string;
    tags: string;
    views: number;
    createdAt: string;
    updatedAt: string;
};

export type GetHealthData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type GetHealthResponses = {
    /**
     * Success
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: unknown;
    };
};

export type GetHealthResponse = GetHealthResponses[keyof GetHealthResponses];

export type GetHealthClearCacheData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health/clear-cache';
};

export type GetHealthClearCacheResponses = {
    /**
     * Success
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: unknown;
    };
};

export type GetHealthClearCacheResponse = GetHealthClearCacheResponses[keyof GetHealthClearCacheResponses];

export type GetHealthClearLogsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health/clear-logs';
};

export type GetHealthClearLogsResponses = {
    /**
     * Success
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: unknown;
    };
};

export type GetHealthClearLogsResponse = GetHealthClearLogsResponses[keyof GetHealthClearLogsResponses];

export type PostAuthLoginData = {
    body?: {
        email: string;
        password: string;
    };
    path?: never;
    query?: never;
    url: '/auth/login';
};

export type PostAuthLoginResponses = {
    /**
     * Login Successfully
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: {
            user: {
                id: string;
                email: string;
                password: string;
                roleId: string;
                tenantId: string;
                name: string;
                phoneNumber: string;
                bio: string;
                resetToken: string;
                deletedAt: string;
                createdAt: string;
                updatedAt: string;
            };
            token: string;
        };
    };
};

export type PostAuthLoginResponse = PostAuthLoginResponses[keyof PostAuthLoginResponses];

export type PostAuthRegisterData = {
    body?: {
        name: string;
        email: string;
        password: string;
        confirmPassword: string;
    };
    path?: never;
    query?: never;
    url: '/auth/register';
};

export type PostAuthRegisterResponses = {
    /**
     * Register Successfully
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: {
            user: {
                id: string;
                email: string;
                password: string;
                roleId: string;
                tenantId: string;
                name: string;
                phoneNumber: string;
                bio: string;
                resetToken: string;
                deletedAt: string;
                createdAt: string;
                updatedAt: string;
            };
            token: string;
        };
    };
};

export type PostAuthRegisterResponse = PostAuthRegisterResponses[keyof PostAuthRegisterResponses];

export type PostAuthExtendTokenData = {
    body?: {
        token: string;
    };
    path?: never;
    query?: never;
    url: '/auth/extend-token';
};

export type PostAuthExtendTokenResponses = {
    /**
     * Token Extended Successfully
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: {
            token: string;
        };
    };
};

export type PostAuthExtendTokenResponse = PostAuthExtendTokenResponses[keyof PostAuthExtendTokenResponses];

export type GetAuthLogoutData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/logout';
};

export type GetAuthLogoutResponses = {
    /**
     * Logout Successfully
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: {
            success: boolean;
        };
    };
};

export type GetAuthLogoutResponse = GetAuthLogoutResponses[keyof GetAuthLogoutResponses];

export type PostAuthForgotPasswordData = {
    body?: {
        email: string;
    };
    path?: never;
    query?: never;
    url: '/auth/forgot-password';
};

export type PostAuthForgotPasswordResponses = {
    /**
     * Reset link sent. Check you email
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: {
            email: string;
        };
    };
};

export type PostAuthForgotPasswordResponse = PostAuthForgotPasswordResponses[keyof PostAuthForgotPasswordResponses];

export type PostAuthResetPasswordData = {
    body?: {
        resetToken: string;
        password: string;
        confirmPassword: string;
    };
    path?: never;
    query?: never;
    url: '/auth/reset-password';
};

export type PostAuthResetPasswordResponses = {
    /**
     * Password reset successful
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: {
            resetToken: string;
            password: string;
            confirmPassword: string;
        };
    };
};

export type PostAuthResetPasswordResponse = PostAuthResetPasswordResponses[keyof PostAuthResetPasswordResponses];

export type GetUsersData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/users';
};

export type GetUsersResponses = {
    /**
     * Success
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: Array<{
            id: string;
            email: string;
            password: string;
            roleId: string;
            tenantId: string;
            name: string;
            phoneNumber: string;
            bio: string;
            resetToken: string;
            deletedAt: string;
            createdAt: string;
            updatedAt: string;
        }>;
    };
};

export type GetUsersResponse = GetUsersResponses[keyof GetUsersResponses];

export type PostUsersData = {
    body?: {
        email?: string;
        password?: string;
        roleId?: string;
        tenantId?: string;
        name?: string;
        phoneNumber?: string;
        bio?: string;
        resetToken?: string;
        deletedAt?: string;
    };
    path?: never;
    query?: never;
    url: '/users';
};

export type PostUsersResponses = {
    /**
     * Users Created Successfully
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: {
            email?: string;
            password?: string;
            roleId?: string;
            tenantId?: string;
            name?: string;
            phoneNumber?: string;
            bio?: string;
            resetToken?: string;
            deletedAt?: string;
        };
    };
};

export type PostUsersResponse = PostUsersResponses[keyof PostUsersResponses];

export type PostUsersImportData = {
    body?: {
        /**
         * The file to upload
         */
        file?: Blob | File;
    };
    path?: never;
    query?: never;
    url: '/users/import';
};

export type PostUsersImportResponses = {
    /**
     * Userss Imported Successfully
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: unknown;
    };
};

export type PostUsersImportResponse = PostUsersImportResponses[keyof PostUsersImportResponses];

export type GetUsersExportData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/users/export';
};

export type GetUsersExportResponses = {
    /**
     * Userss Exported Successfully
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: unknown;
    };
};

export type GetUsersExportResponse = GetUsersExportResponses[keyof GetUsersExportResponses];

export type DeleteUsersByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/users/{id}';
};

export type DeleteUsersByIdResponses = {
    /**
     * Users Deleted Successfully
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: unknown;
    };
};

export type DeleteUsersByIdResponse = DeleteUsersByIdResponses[keyof DeleteUsersByIdResponses];

export type GetUsersByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/users/{id}';
};

export type GetUsersByIdResponses = {
    /**
     * Success
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: {
            id: string;
            email: string;
            password: string;
            roleId: string;
            tenantId: string;
            name: string;
            phoneNumber: string;
            bio: string;
            resetToken: string;
            deletedAt: string;
            createdAt: string;
            updatedAt: string;
        };
    };
};

export type GetUsersByIdResponse = GetUsersByIdResponses[keyof GetUsersByIdResponses];

export type PutUsersByIdData = {
    body?: {
        email?: string;
        roleId?: string;
        tenantId?: string;
        name?: string;
        phoneNumber?: string;
        bio?: string;
        resetToken?: string;
        deletedAt?: string;
        updatedAt?: string;
    };
    path: {
        id: string;
    };
    query?: never;
    url: '/users/{id}';
};

export type PutUsersByIdResponses = {
    /**
     * Users Updated Successfully
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: {
            id: string;
            email: string;
            password: string;
            roleId: string;
            tenantId: string;
            name: string;
            phoneNumber: string;
            bio: string;
            resetToken: string;
            deletedAt: string;
            createdAt: string;
            updatedAt: string;
        };
    };
};

export type PutUsersByIdResponse = PutUsersByIdResponses[keyof PutUsersByIdResponses];

export type GetUsersEmailByEmailData = {
    body?: never;
    path: {
        email: string;
    };
    query?: never;
    url: '/users/email/{email}';
};

export type GetUsersEmailByEmailResponses = {
    /**
     * Success
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: {
            id: string;
            email: string;
            password: string;
            roleId: string;
            tenantId: string;
            name: string;
            phoneNumber: string;
            bio: string;
            resetToken: string;
            deletedAt: string;
            createdAt: string;
            updatedAt: string;
        };
    };
};

export type GetUsersEmailByEmailResponse = GetUsersEmailByEmailResponses[keyof GetUsersEmailByEmailResponses];

export type PostUsersFindData = {
    body?: {
        filter: {
            [key: string]: unknown;
        };
        paginate?: {
            page?: number;
            perPage?: number;
        };
        orderBy?: Array<{
            sort?: string;
            order: 'asc' | 'desc';
        }>;
    };
    path?: never;
    query?: never;
    url: '/users/find';
};

export type PostUsersFindResponses = {
    /**
     * Success
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: Array<{
            filter: {
                [key: string]: unknown;
            };
            paginate?: {
                page?: number;
                perPage?: number;
            };
            orderBy?: Array<{
                sort?: string;
                order: 'asc' | 'desc';
            }>;
        }>;
    };
};

export type PostUsersFindResponse = PostUsersFindResponses[keyof PostUsersFindResponses];

export type DeleteUsersBulkData = {
    body?: {
        ids: Array<string>;
    };
    path?: never;
    query?: never;
    url: '/users/bulk';
};

export type DeleteUsersBulkResponses = {
    /**
     * Userss Deleted Successfully
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: unknown;
    };
};

export type DeleteUsersBulkResponse = DeleteUsersBulkResponses[keyof DeleteUsersBulkResponses];

export type GetFilesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/files';
};

export type GetFilesResponses = {
    /**
     * Success
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: Array<{
            id: string;
            userId: string;
            name: string;
            path: string;
            text: string;
            tags: string;
            views: number;
            createdAt: string;
            updatedAt: string;
        }>;
    };
};

export type GetFilesResponse = GetFilesResponses[keyof GetFilesResponses];

export type DeleteFilesByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/files/{id}';
};

export type DeleteFilesByIdResponses = {
    /**
     * Files Deleted Successfully
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: unknown;
    };
};

export type DeleteFilesByIdResponse = DeleteFilesByIdResponses[keyof DeleteFilesByIdResponses];

export type GetFilesByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/files/{id}';
};

export type GetFilesByIdResponses = {
    /**
     * Success
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: {
            id: string;
            userId: string;
            name: string;
            path: string;
            text: string;
            tags: string;
            views: number;
            createdAt: string;
            updatedAt: string;
        };
    };
};

export type GetFilesByIdResponse = GetFilesByIdResponses[keyof GetFilesByIdResponses];

export type PutFilesByIdData = {
    body?: {
        userId?: string;
        name?: string;
        tags?: string;
        /**
         * The file to upload
         */
        file?: Blob | File;
        views?: string;
    };
    path: {
        id: string;
    };
    query?: never;
    url: '/files/{id}';
};

export type PutFilesByIdResponses = {
    /**
     * File updated Successfully
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: {
            userId?: string;
            name?: string;
            tags?: string;
            /**
             * The file to upload
             */
            file?: Blob | File;
            views?: string;
        };
    };
};

export type PutFilesByIdResponse = PutFilesByIdResponses[keyof PutFilesByIdResponses];

export type GetFilesUserByUserIdData = {
    body?: never;
    path: {
        userId: string;
    };
    query?: never;
    url: '/files/user/{userId}';
};

export type GetFilesUserByUserIdResponses = {
    /**
     * Success
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: Array<{
            id: string;
            userId: string;
            name: string;
            path: string;
            text: string;
            tags: string;
            views: number;
            createdAt: string;
            updatedAt: string;
        }>;
    };
};

export type GetFilesUserByUserIdResponse = GetFilesUserByUserIdResponses[keyof GetFilesUserByUserIdResponses];

export type PostFilesFindData = {
    body?: {
        filter: {
            [key: string]: unknown;
        };
        paginate?: {
            page?: number;
            perPage?: number;
        };
        orderBy?: Array<{
            sort?: string;
            order: 'asc' | 'desc';
        }>;
    };
    path?: never;
    query?: never;
    url: '/files/find';
};

export type PostFilesFindResponses = {
    /**
     * Success
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: Array<{
            filter: {
                [key: string]: unknown;
            };
            paginate?: {
                page?: number;
                perPage?: number;
            };
            orderBy?: Array<{
                sort?: string;
                order: 'asc' | 'desc';
            }>;
        }>;
    };
};

export type PostFilesFindResponse = PostFilesFindResponses[keyof PostFilesFindResponses];

export type PostFilesUploadData = {
    body?: {
        userId?: string;
        name?: string;
        tags?: string;
        /**
         * The file to upload
         */
        file?: Blob | File;
        views?: string;
    };
    path?: never;
    query?: never;
    url: '/files/upload';
};

export type PostFilesUploadResponses = {
    /**
     * File uploaded Successfully
     */
    200: {
        success: boolean;
        statusCode: number;
        message: string;
        data?: {
            userId?: string;
            name?: string;
            tags?: string;
            /**
             * The file to upload
             */
            file?: Blob | File;
            views?: string;
        };
    };
};

export type PostFilesUploadResponse = PostFilesUploadResponses[keyof PostFilesUploadResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:5000/api' | 'https://localhost:5000/api' | (string & {});
};